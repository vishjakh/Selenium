<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-15T13:34:22 IST" name="Suite" finished-at="2022-10-15T13:34:59 IST" duration-ms="36822">
    <groups>
    </groups>
    <test started-at="2022-10-15T13:34:22 IST" name="Test" finished-at="2022-10-15T13:34:59 IST" duration-ms="36822">
      <class name="swagger.petstore.user">
        <test-method is-config="true" signature="setup()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:44 IST" name="setup" finished-at="2022-10-15T13:34:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createUserWithArray()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:44 IST" name="createUserWithArray" finished-at="2022-10-15T13:34:45 IST" duration-ms="1418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserWithArray -->
        <test-method signature="createUserWithList()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:45 IST" name="createUserWithList" finished-at="2022-10-15T13:34:46 IST" duration-ms="1282" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at swagger.petstore.user.createUserWithList(user.java:59)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserWithList -->
        <test-method signature="getUser()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:46 IST" name="getUser" finished-at="2022-10-15T13:34:48 IST" depends-on-methods="swagger.petstore.user.createUserWithArray" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method signature="login()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:48 IST" name="login" finished-at="2022-10-15T13:34:49 IST" depends-on-methods="swagger.petstore.user.createUserWithArray" duration-ms="1254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="logout()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:49 IST" name="logout" finished-at="2022-10-15T13:34:50 IST" depends-on-methods="swagger.petstore.user.login" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method signature="updateUser()[pri:0, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:50 IST" name="updateUser" finished-at="2022-10-15T13:34:51 IST" depends-on-methods="swagger.petstore.user.createUserWithArray" duration-ms="1258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
        <test-method signature="deleteUser()[pri:1, instance:swagger.petstore.user@279fedbd]" started-at="2022-10-15T13:34:51 IST" name="deleteUser" finished-at="2022-10-15T13:34:53 IST" depends-on-methods="swagger.petstore.user.createUserWithArray" duration-ms="1286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- swagger.petstore.user -->
      <class name="swagger.petstore.store">
        <test-method is-config="true" signature="setup()[pri:0, instance:swagger.petstore.store@b3ca52e]" started-at="2022-10-15T13:34:53 IST" name="setup" finished-at="2022-10-15T13:34:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="placeOrder()[pri:0, instance:swagger.petstore.store@b3ca52e]" started-at="2022-10-15T13:34:53 IST" name="placeOrder" finished-at="2022-10-15T13:34:57 IST" duration-ms="3862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method signature="checkPurchase()[pri:0, instance:swagger.petstore.store@b3ca52e]" started-at="2022-10-15T13:34:57 IST" name="checkPurchase" finished-at="2022-10-15T13:34:58 IST" depends-on-methods="swagger.petstore.store.placeOrder" duration-ms="1308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPurchase -->
        <test-method signature="deleteOrder()[pri:0, instance:swagger.petstore.store@b3ca52e]" started-at="2022-10-15T13:34:58 IST" name="deleteOrder" finished-at="2022-10-15T13:34:59 IST" depends-on-methods="swagger.petstore.store.placeOrder, swagger.petstore.store.checkPurchase" duration-ms="1245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteOrder -->
      </class> <!-- swagger.petstore.store -->
      <class name="swagger.petstore.pet">
        <test-method is-config="true" signature="setup()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:23 IST" name="setup" finished-at="2022-10-15T13:34:24 IST" duration-ms="1942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addPet()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:24 IST" name="addPet" finished-at="2022-10-15T13:34:35 IST" duration-ms="10205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPet -->
        <test-method signature="findPet()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:35 IST" name="findPet" finished-at="2022-10-15T13:34:36 IST" depends-on-methods="swagger.petstore.pet.addPet" duration-ms="1341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findPet -->
        <test-method signature="getStatus()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:36 IST" name="getStatus" finished-at="2022-10-15T13:34:38 IST" duration-ms="1539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="modifyPet()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:38 IST" name="modifyPet" finished-at="2022-10-15T13:34:39 IST" duration-ms="1299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyPet -->
        <test-method signature="updatePet()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:39 IST" name="updatePet" finished-at="2022-10-15T13:34:40 IST" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePet -->
        <test-method signature="uploadImage()[pri:0, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:40 IST" name="uploadImage" finished-at="2022-10-15T13:34:42 IST" depends-on-methods="swagger.petstore.pet.addPet" duration-ms="2169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadImage -->
        <test-method signature="deletePet()[pri:10, instance:swagger.petstore.pet@1ce24091]" started-at="2022-10-15T13:34:42 IST" name="deletePet" finished-at="2022-10-15T13:34:44 IST" depends-on-methods="swagger.petstore.pet.addPet" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePet -->
      </class> <!-- swagger.petstore.pet -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
